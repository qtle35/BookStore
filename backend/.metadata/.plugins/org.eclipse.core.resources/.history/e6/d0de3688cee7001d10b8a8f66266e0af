package com.example.demo.controller;


import java.io.File;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;
import org.apache.commons.io.FileUtils;
import com.example.demo.entity.Laptop;
import com.example.demo.repository.LaptopRepository;

@CrossOrigin(origins = "http://localhost:3000/")
@RestController
@RequestMapping("api/v1/")
public class LaptopController {
	
	@Autowired
	LaptopRepository laptopRepository;
	
	@GetMapping("/laptops")
	public List<Laptop> getAllLaptops(){
		return laptopRepository.findAll();
	}
	@PostMapping("/laptops")
	public Laptop createLaptop(@RequestPart("laptop") Laptop laptop, @RequestPart("image") MultipartFile image){
		Laptop savedLaptop = laptopRepository.save(laptop);
		try {
			File imageFile = new File("path/to/image/folder/" + savedLaptop.getId() + ".jpg");
	        FileUtils.writeByteArrayToFile(imageFile, image.getBytes());
	        savedLaptop.setImagePath(imageFile.getAbsolutePath());
		} catch (Exception e) {
			e.printStackTrace();
		}
		return laptopRepository.save(laptop);
	}
	@GetMapping("/laptops/{id}")
	public Laptop getLaptop(@PathVariable String id) {
		int id1 = Integer.parseInt(id);
		return laptopRepository.existsById(id1)?laptopRepository.findById(id1).get():null;
	}
	@DeleteMapping("/laptops/{id}")
	public void deleteLaptop(@PathVariable String id) {
	    laptopRepository.deleteById(Integer.parseInt(id));
	}

	@PutMapping("laptops/{id}")
	public Laptop updateLaptop(@RequestBody Laptop laptop, @PathVariable String id) {
		Laptop laptop2 = laptopRepository.findById(Integer.parseInt(id)).get();
		laptop2.setBrand(laptop.getBrand());
		laptop2.setName(laptop.getName());
		laptop2.setNsx(laptop.getNsx());
		laptop2.setPrice(laptop.getPrice());
		laptop2.setSold(laptop.isSold());
		return laptopRepository.save(laptop2);
	}
}
